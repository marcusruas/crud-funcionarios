@model Funcionarios.Models.FuncionarioAlteracaoViewModel

@{
    ViewBag.Title = "Atualizar Funcionario";
}
<br />

@using (Html.BeginForm("AlterarFuncionario", "Home", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.Header</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => Model.Funcionario.Codigo);
        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.Nome, new { htmlAttributes = new { @class = "form-control", value = Model.Funcionario.Nome } })
                @Html.ValidationMessageFor(model => model.Funcionario.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.Email, new { htmlAttributes = new { @class = "form-control", value = Model.Funcionario.Email } })
                @Html.ValidationMessageFor(model => model.Funcionario.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Funcionario.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.Salario, new { htmlAttributes = new { @class = "form-control", value = Model.Funcionario.Salario } })
                @Html.ValidationMessageFor(model => model.Funcionario.Salario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" style="width: 100%" name="Funcionario.Estado">
                    <option value="0">-- Selecione --</option>
                    @foreach (var estado in Model.Estados)
                    {
                        <option value="@estado.Codigo" @Model.Funcionario.PossuiEstado(estado.Codigo)>@estado.Nome - @estado.Sigla</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Funcionario.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Alterar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
